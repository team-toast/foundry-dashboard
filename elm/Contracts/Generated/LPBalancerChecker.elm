module Contracts.Generated.LPBalancerChecker exposing (getBalances)

import BigInt exposing (BigInt)
import Eth.Abi.Decode as D exposing (abiDecode, andMap, data, toElmDecoder, topic)
import Eth.Abi.Encode as E exposing (Encoding(..), abiEncode)
import Eth.Types exposing (..)
import Eth.Utils as U
import Json.Decode as Decode exposing (Decoder, succeed)
import Json.Decode.Pipeline exposing (custom)



{-

   This file was generated by https://github.com/cmditch/elm-ethereum-generator v4.0.0
   Compatible with elm-ethereum v4.0.0

-}
-- getBalances(address,address,address,address[]) function


getBalances : Address -> Address -> Address -> Address -> List Address -> Call (List BigInt)
getBalances contractAddress bc_ lpToken_ tokenToCount_ addressesToCount_ =
    { to = Just contractAddress
    , from = Nothing
    , gas = Nothing
    , gasPrice = Nothing
    , value = Nothing
    , data = Just <| E.functionCall "60187cfd" [ E.address bc_, E.address lpToken_, E.address tokenToCount_, (E.list << List.map E.address) addressesToCount_ ]
    , nonce = Nothing
    , decoder = toElmDecoder (D.dynamicArray D.uint)
    }
