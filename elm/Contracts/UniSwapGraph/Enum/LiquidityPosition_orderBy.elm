-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Contracts.UniSwapGraph.Enum.LiquidityPosition_orderBy exposing (..)

import Json.Decode as Decode exposing (Decoder)


type LiquidityPosition_orderBy
    = Id
    | User
    | Pair
    | LiquidityTokenBalance


list : List LiquidityPosition_orderBy
list =
    [ Id, User, Pair, LiquidityTokenBalance ]


decoder : Decoder LiquidityPosition_orderBy
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "id" ->
                        Decode.succeed Id

                    "user" ->
                        Decode.succeed User

                    "pair" ->
                        Decode.succeed Pair

                    "liquidityTokenBalance" ->
                        Decode.succeed LiquidityTokenBalance

                    _ ->
                        Decode.fail ("Invalid LiquidityPosition_orderBy type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : LiquidityPosition_orderBy -> String
toString enum =
    case enum of
        Id ->
            "id"

        User ->
            "user"

        Pair ->
            "pair"

        LiquidityTokenBalance ->
            "liquidityTokenBalance"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe LiquidityPosition_orderBy
fromString enumString =
    case enumString of
        "id" ->
            Just Id

        "user" ->
            Just User

        "pair" ->
            Just Pair

        "liquidityTokenBalance" ->
            Just LiquidityTokenBalance

        _ ->
            Nothing
